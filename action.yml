# action.yml
name: 'Deploy a Flutter Web build to GH Pages'
description: 'Validate Dart/Flutter package'
inputs:
  build_flags:
    description: '(Optional) Build flags to pass to Flutter when building the web'
    required: false
    default: ''
  build_mode:
    description: '(Optional) Release mode; debug, profile, release'
    default: 'release'
    required: false
  build_number:
    description: 'Build Number to use for the build'
    required: true
  channel:
    description: '(Optional) Default flutter channel to use'
    default: 'stable'
    required: false
  deploy_path:
    description: '(Optional) Path to deploy the built application to'
    default: 'web'
    required: false
  flutter_version:
    description: '(Optional) Flutter version to use'
    default: 'any'
    required: false
  repo_branch:
    description: 'Url to the repo to build'
    default: 'gh-pages'
    required: false
  repo_url:
    description: 'Url to the repo to build'
    required: true
  source_path:
    description: '(Optional) Path to the source to build'
    required: false
    default: '.'
  token:
    description: 'Access token for the GH Push to retrieve code'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: ${{ inputs.channel }}
        flutter-version: ${{ inputs.flutter_version }}

    - name: Setup Git
      shell: bash
      run: |
        set -e

        git config --global user.email "noop@github.com"
        git config --global user.name "action"
        git config --global url."https://action:${{ inputs.token }}@github.com/".insteadOf https://github.com/

    - name: Setup Git
      shell: bash
      run: |
        flutter doctor -v
        flutter packages get

        flutter build web --${{ inputs.build_mode }} ${{ inputs.build_flags }}

        mkdir pages
        cd pages

        git clone --branch ${{ inputs.repo_branch }} ${{ inputs.repo_url }} .
        rm -rf ${{ inputs.deploy_path }}
        mkdir ${{ inputs.deploy_path }}
        cp -R ../build/web/* ${{ inputs.deploy_path }}
        git add .
        git tag -a "v${{ inputs.build_number }}" -m "v${{ inputs.build_number }}" 
        git commit -m "Pages ${{ inputs.build_number }}"
        git push -f origin HEAD:gh-pages
      working-directory: ${{ inputs.source_path }}
